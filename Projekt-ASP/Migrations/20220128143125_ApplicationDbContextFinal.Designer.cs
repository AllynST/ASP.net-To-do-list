// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_ASP.Models;

namespace Projekt_ASP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220128143125_ApplicationDbContextFinal")]
    partial class ApplicationDbContextFinal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekt_ASP.Models.Task", b =>
                {
                    b.Property<int>("Task_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Team_ID")
                        .HasColumnType("int");

                    b.Property<bool>("finished")
                        .HasColumnType("bit");

                    b.HasKey("Task_ID");

                    b.HasIndex("Team_ID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Projekt_ASP.Models.Team", b =>
                {
                    b.Property<int>("Team_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Team_ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Projekt_ASP.Models.User", b =>
                {
                    b.Property<string>("User_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamUser", b =>
                {
                    b.Property<string>("MembersUser_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamsTeam_ID")
                        .HasColumnType("int");

                    b.HasKey("MembersUser_ID", "TeamsTeam_ID");

                    b.HasIndex("TeamsTeam_ID");

                    b.ToTable("TeamUser");
                });

            modelBuilder.Entity("Projekt_ASP.Models.Task", b =>
                {
                    b.HasOne("Projekt_ASP.Models.Team", "team")
                        .WithMany("Tasks")
                        .HasForeignKey("Team_ID");

                    b.Navigation("team");
                });

            modelBuilder.Entity("TeamUser", b =>
                {
                    b.HasOne("Projekt_ASP.Models.User", null)
                        .WithMany()
                        .HasForeignKey("MembersUser_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_ASP.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsTeam_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projekt_ASP.Models.Team", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
